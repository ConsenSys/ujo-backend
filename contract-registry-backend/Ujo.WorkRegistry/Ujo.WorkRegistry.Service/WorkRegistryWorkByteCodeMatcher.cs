using System.Threading.Tasks;
using Nethereum.Hex.HexConvertors.Extensions;
using Nethereum.Web3;

namespace Ujo.WorkRegistry.Service
{
    public class WorkRegistryWorkByteCodeMatcher
    {
        private static string workByteCode =
           "0x606060405236156100985760e060020a6000350463149cc210811461009d5780631babd036146100f657806334cae885146101255780633cebb823146101d657806363bb4c52146101e9578063654cf88c146101ff5780639201de551461026d57806393a0396b1461027d578063a33e647e14610294578063ded8454a146102a7578063eab700db1461034b578063ecdc58c814610361575b610002565b34610002576103ba600435600081815260036020526040805190822080549091908190839060026001821615610100026000190190911604801561053d5780601f1061051b57610100808354040283529182019161053d565b34610002576103cc6004356105505b6000805433600160a060020a0390811691161415610c9357506001610c97565b3461000257604080516004803580820135602081810280860182019096528185526103cc9593946024949093850192918291908501908490808284375050604080516020601f8935808c01359182018390048302840183019094528083529799986044989297509290920194509250829150840183828082843750949650509335935050505060408051808201825260008082526020828101829052835190810190935280835290916105ab610105565b34610002576103cc60043561078c610105565b34610002576103cc6004356024356107b5610105565b34610002576103ce6004356003602090815260009182526040805192819020805460026001821615610100026000190190911604601f81018490048402850184019092528184529183018282801561084d5780601f106108225761010080835404028352916020019161084d565b34610002576103ce600435610444565b34610002576104fe600254600160a060020a031681565b34610002576103cc600435610886610105565b34610002576103ce6004356020604051908101604052806000815260200150600060146040518059106102d75750595b9080825280602002602001820160405280156102ee575b509150600090505b60148110156105df578060130360080260020a83600160a060020a03168115610002570460f860020a028282815181101561000257906020010190600160f860020a031916908160001a9053506001016102f6565b34610002576103cc6004356024356108e2610105565b346100025760408051602060046024803582810135601f81018590048502860185019096528585526103cc958335959394604494939290920191819084018382808284375094965050933593505050505b61093e610105565b60408051918252519081900360200190f35b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561042e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b506109eb9050425b60408051602081810183526000808352835180830185528181529351929392909182918059106104715750595b908082528060200260200182016040528015610488575b509250600091505b602082101561087d57506008810260020a84027fff0000000000000000000000000000000000000000000000000000000000000081166000146104f257808383815181101561000257906020010190600160f860020a031916908160001a9053505b60019190910190610490565b60408051600160a060020a03929092168252519081900360200190f35b820191906000526020600020905b815481529060010190602001808311610529575b5050604051908190039020949350505050565b156100985780600160a060020a0316634420e486306040518260e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b156100025760325a03f115610002575050505b50565b15610098576105e5855b60408051808201825260008082526020918201528151808301909252825182528281019082018190525b50919050565b9250600091505b855182101561063a5760408051808201909152600181527f7c00000000000000000000000000000000000000000000000000000000000000602082015261064290610663906106e5906105b5565b505050505050565b905061078086838151811015610002579060200190602002015182866103b2565b60408051602081810183526000808352835191820184528082529251845192939192908059106106905750595b9080825280602002602001820160405280156106a7575b509150602082019050610c9a818560200151866000015160005b60208210610cbf57825184526020938401939290920191601f1991909101906106c1565b85906040805180820190915260008082526020820152610c9a83838360408051808201909152600080825260208281018290528551868201518651928701516108559390600080808080888711610cdd5760208711610cef5760018760200360080260020a031980875116888b038a018a96505b818388511614610775576001870196819010610759578b8b0196505b505050839450610ce3565b600191909101906105ec565b15610098576000805473ffffffffffffffffffffffffffffffffffffffff1916821790556105a8565b156100985781600160a060020a031663aa67735482306040518360e060020a0281526004018083600160a060020a0316815260200182600160a060020a0316815260200192505050600060405180830381600087803b156100025760325a03f115610002575050505b5050565b820191906000526020600020905b81548152906001019060200180831161083057829003601f168201915b505050505081565b60208681018051918601919091528051820385528651905191925001811415610ca157600085525b50909392505050565b156100985780600160a060020a0316632ec2c246306040518260e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b156100025760325a03f115610002575050506105a8565b156100985781600160a060020a0316632ec2c246826040518260e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b156100025760325a03f1156100025750505061081e565b1561009857600083815260036020908152604082208054855182855293839020919360026001831615610100026000190190921691909104601f9081018490048301939192918701908390106109b757805160ff19168380011785555b5061043c9291505b808211156109e757600081556001016109a3565b8280016001018555821561099b579182015b8281111561099b5782518260005055916020019190600101906109c9565b5090565b7f646174654d6f646966696564000000000000000000000000000000000000000060009081526003602090815282517f98e19eede669ae20251fc0021b5471ae27cfea8f84ef648abf72597428d8b18c8054938190529360026001851615610100026000190190941693909304601f9081018390047f100bae4bc2c7063ab9723707e6aa89741feb5a177b623be59fefc8153084be6990810194929390920190839010610aab57805160ff19168380011785555b50610adb9291506109a3565b82800160010185558215610a9f579182015b82811115610a9f578251826000505591602001919060010190610abd565b5050808015610b5b5750600260009054906101000a9004600160a060020a0316600160a060020a0316633560afd5846000604051602001526040518260e060020a0281526004018082600019168152602001915050602060405180830381600087803b156100025760325a03f11561000257505060405151151560011490505b15610bf95782600019167f7e8c916a2c8d9cc8d8e67f1028137812a6d636c5e1b1dc547a5ca0f9f415e1db8360405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610be75780820380516001836020036101000a031916815260200191505b509250505060405180910390a2610c8e565b82600019167ffbd6e799d0b7e94983ada5c7c8d53bf8897a567d5453ded6f059b25204bb58248360405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610c805780820380516001836020036101000a031916815260200191505b509250505060405180910390a25b505050565b5060005b90565b5092915050565b82518451865191019003855283518101602086015250909392505050565b50905182516020929092036101000a60001901918216911916179052565b88880194505b50505050949350505050565b8686208894506000935091505b8689038311610cdd575085832080821415610d1957839450610ce3565b6001938401939290920191610cfc56";
        private readonly Web3 web3;

        public WorkRegistryWorkByteCodeMatcher(Web3 web3)
        {
            this.web3 = web3;
        }

        public async Task<bool> IsMatchAsync(string address)
        {
            var code = await web3.Eth.GetCode.SendRequestAsync(web3.ToValid20ByteAddress(address));
            return code.IsTheSameHex(workByteCode); 
        }
    }
}